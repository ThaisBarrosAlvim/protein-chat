services:
  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.26.5
    ports:
      - 8080:8080
      - 50051:50051
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: on-failure
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-ollama'
      ENABLE_MODULES: 'text2vec-ollama,generative-ollama,backup-filesystem'
      BACKUP_FILESYSTEM_PATH: '/backups/'
      # TODO remove clustername
      CLUSTER_HOSTNAME: 'bf28fd500657'
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8080/v1/.well-known/ready" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
  ollama:
    build:
      context: .
      dockerfile: ./docker/ollama/Dockerfile
    image: ollama/ollama
    container_name: ollama
    ports:
      - 11434:11434
    volumes:
      - ./ollama/ollama:/root/.ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  flask:
    build:
      context: .
      dockerfile: docker/flask/Dockerfile
    container_name: flask_app
    restart: always
    ports:
      - 5000:5000
    depends_on:
      weaviate:
        condition: service_healthy

volumes:
  ollama:
  weaviate_data:
